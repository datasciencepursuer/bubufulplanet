generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Trip {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String            @db.VarChar(255)
  startDate        DateTime          @map("start_date") @db.Date
  endDate          DateTime          @map("end_date") @db.Date
  destination      String?           @db.VarChar(255)
  createdAt        DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  userId           String            @map("user_id") @db.VarChar(255)
  groupId          String?           @map("group_id") @db.Uuid
  packingItems     PackingItem[]
  pointsOfInterest PointOfInterest[]
  tripDays         TripDay[]
  expenses         Expense[]
  group            TravelGroup?      @relation(fields: [groupId], references: [id])

  @@index([userId], map: "idx_trips_user_id")
  @@index([startDate, endDate], map: "idx_trips_dates")
  @@index([groupId], map: "idx_trips_group_id")
  @@map("trips")
}

model TripDay {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tripId    String    @map("trip_id") @db.Uuid
  dayNumber Int       @map("day_number")
  date      DateTime  @db.Date
  notes     String?
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  events    Event[]
  expenses  Expense[]
  trip      Trip      @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@unique([tripId, dayNumber])
  @@unique([tripId, date])
  @@index([tripId], map: "idx_trip_days_trip_id")
  @@index([date], map: "idx_trip_days_date")
  @@index([tripId, dayNumber], map: "idx_trip_days_trip_id_day_number")
  @@map("trip_days")
}

model Event {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  dayId     String    @map("day_id") @db.Uuid
  title     String    @db.VarChar(255)
  location  String?   @db.VarChar(255)
  notes     String?
  weather   String?   @db.VarChar(255)
  loadout   String?
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  color     String    @default("#3B82F6") @db.VarChar(7)
  startSlot String    @map("start_slot") @db.VarChar(5)
  endSlot   String?   @map("end_slot") @db.VarChar(5)
  day       TripDay   @relation(fields: [dayId], references: [id], onDelete: Cascade)
  expenses  Expense[]

  @@index([dayId], map: "idx_events_day_id")
  @@index([startSlot, endSlot], map: "idx_events_slots")
  @@index([dayId, startSlot], map: "idx_events_day_start_slot")
  @@map("events")
}

model Expense {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  eventId     String?  @map("event_id") @db.Uuid
  dayId       String?  @map("day_id") @db.Uuid
  tripId      String   @map("trip_id") @db.Uuid
  description String   @db.VarChar(255)
  amount      Decimal  @db.Decimal(10, 2)
  category    String?  @db.VarChar(100)
  ownerId     String   @map("owner_id") @db.Uuid
  groupId     String   @map("group_id") @db.Uuid
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  day         TripDay? @relation(fields: [dayId], references: [id], onDelete: Cascade)
  event       Event?   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  owner       GroupMember @relation("ExpenseOwner", fields: [ownerId], references: [id])
  participants ExpenseParticipant[]
  lineItems   ExpenseLineItem[]

  @@index([dayId], map: "idx_expenses_day_id")
  @@index([eventId], map: "idx_expenses_event_id")
  @@index([tripId], map: "idx_expenses_trip_id")
  @@index([ownerId], map: "idx_expenses_owner_id")
  @@index([groupId], map: "idx_expenses_group_id")
  @@index([groupId, tripId], map: "idx_expenses_group_trip")
  @@index([groupId, ownerId], map: "idx_expenses_group_owner")
  @@map("expenses")
}

model PackingItem {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tripId    String   @map("trip_id") @db.Uuid
  itemName  String   @map("item_name") @db.VarChar(255)
  quantity  Int      @default(1)
  packed    Boolean  @default(false)
  category  String?  @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  trip      Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@index([tripId], map: "idx_packing_items_trip_id")
  @@map("packing_items")
}

model TravelGroup {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String            @db.VarChar(255)
  accessCode       String            @unique @map("access_code") @db.VarChar(50)
  createdAt        DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy        String?           @map("created_by") @db.Uuid
  groupMembers        GroupMember[]
  pointsOfInterest    PointOfInterest[]
  externalParticipants ExternalParticipant[]
  createdByMember     GroupMember?      @relation("GroupCreator", fields: [createdBy], references: [id])
  trips               Trip[]

  @@index([accessCode], map: "idx_travel_groups_access_code")
  @@map("travel_groups")
}

model GroupMember {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  groupId       String        @map("group_id") @db.Uuid
  travelerName  String        @map("traveler_name") @db.VarChar(255)
  role          String        @default("party member") @db.VarChar(50)
  permissions   Json          @default("{\"read\": true, \"create\": false, \"modify\": false}")
  joinedAt      DateTime      @default(now()) @map("joined_at") @db.Timestamptz(6)
  createdBy     String?       @map("created_by") @db.Uuid
  travelGroup   TravelGroup   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  createdGroups TravelGroup[] @relation("GroupCreator")
  ownedExpenses Expense[]     @relation("ExpenseOwner")
  expenseParticipations ExpenseParticipant[]
  lineItemParticipations LineItemParticipant[]

  @@unique([groupId, travelerName], name: "unique_group_traveler")
  @@index([groupId], map: "idx_group_members_group_id")
  @@index([groupId, travelerName], map: "idx_group_members_group_traveler")
  @@map("group_members")
}

model Device {
  fingerprint    String          @id @db.VarChar(255)
  userAgent      String?         @map("user_agent")
  screen         String?         @db.VarChar(100)
  timezone       String?         @db.VarChar(100)
  language       String?         @db.VarChar(20)
  platform       String?         @db.VarChar(100)
  createdAt      DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime        @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deviceSessions DeviceSession[]

  @@map("devices")
}

model DeviceSession {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  deviceFingerprint   String   @map("device_fingerprint") @db.VarChar(255)
  groupId             String   @map("group_id") @db.Uuid
  sessionData         Json?    @map("session_data")
  userAgent           String?  @map("user_agent")
  ipAddress           String?  @map("ip_address") @db.VarChar(45)
  isActive            Boolean  @default(true) @map("is_active")
  lastUsed            DateTime @default(now()) @map("last_used") @db.Timestamptz(6)
  createdAt           DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  currentTravelerName String   @map("current_traveler_name") @db.VarChar(255)
  availableTravelers  Json?    @map("available_travelers")
  sessionType         String?  @default("remember_device") @map("session_type") @db.VarChar(20)
  expiresAt           DateTime @map("expires_at") @db.Timestamptz(6)
  maxIdleTime         Int?     @default(1814400) @map("max_idle_time")
  device              Device   @relation(fields: [deviceFingerprint], references: [fingerprint], onDelete: Cascade)

  @@unique([deviceFingerprint, groupId], name: "unique_device_group_session", map: "unique_device_group_session")
  @@index([deviceFingerprint], map: "idx_device_sessions_fingerprint")
  @@index([groupId], map: "idx_device_sessions_group_id")
  @@index([isActive], map: "idx_device_sessions_active")
  @@index([expiresAt], map: "idx_device_sessions_expires")
  @@index([lastUsed], map: "idx_device_sessions_last_used")
  @@index([deviceFingerprint, groupId, isActive], map: "idx_device_sessions_lookup")
  @@index([isActive, expiresAt], map: "idx_device_sessions_cleanup")
  @@map("device_sessions")
}

model CleanupLog {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tableName    String   @map("table_name") @db.VarChar(100)
  deletedCount Int      @map("deleted_count")
  details      Json?
  cleanedAt    DateTime @map("cleaned_at") @db.Timestamptz(6)

  @@index([tableName], map: "idx_cleanup_log_table")
  @@index([cleanedAt], map: "idx_cleanup_log_cleaned_at")
  @@map("cleanup_log")
}

model PointOfInterest {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  destinationName String      @map("destination_name") @db.VarChar(255)
  address         String?
  notes           String?
  link            String?
  groupId         String      @map("group_id") @db.Uuid
  tripId          String?     @map("trip_id") @db.Uuid
  createdAt       DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  group           TravelGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  trip            Trip?       @relation(fields: [tripId], references: [id])

  @@index([groupId], map: "idx_points_of_interest_group_id")
  @@index([tripId], map: "idx_points_of_interest_trip_id")
  @@map("points_of_interest")
}

model ExpenseParticipant {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  expenseId              String               @map("expense_id") @db.Uuid
  participantId          String?              @map("participant_id") @db.Uuid
  externalParticipantId  String?              @map("external_participant_id") @db.Uuid
  externalName           String?              @map("external_name") @db.VarChar(255)
  splitPercentage        Decimal              @map("split_percentage") @db.Decimal(5, 2) @default(0)
  amountOwed             Decimal              @map("amount_owed") @db.Decimal(10, 2)
  createdAt              DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  
  expense             Expense               @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  participant         GroupMember?          @relation(fields: [participantId], references: [id])
  externalParticipant ExternalParticipant?  @relation(fields: [externalParticipantId], references: [id], onDelete: SetNull)
  
  @@unique([expenseId, participantId])
  @@unique([expenseId, externalName])
  @@index([expenseId], map: "idx_expense_participants_expense_id")
  @@index([participantId], map: "idx_expense_participants_participant_id")
  @@index([externalParticipantId], map: "idx_expense_participants_external_participant_id")
  @@map("expense_participants")
}

model ExternalParticipant {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  groupId       String   @map("group_id") @db.Uuid
  name          String   @db.VarChar(255)
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  lastUsedAt    DateTime @default(now()) @map("last_used_at") @db.Timestamptz(6)

  group         TravelGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  expenseParticipations ExpenseParticipant[]
  lineItemParticipations LineItemParticipant[]

  @@unique([groupId, name])
  @@index([groupId], map: "idx_external_participants_group_id")
  @@index([name], map: "idx_external_participants_name") 
  @@index([lastUsedAt], map: "idx_external_participants_last_used")
  @@map("external_participants")
}

model ExpenseLineItem {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  expenseId   String   @map("expense_id") @db.Uuid
  description String   @db.VarChar(255)
  amount      Decimal  @db.Decimal(10, 2)
  quantity    Int      @default(1)
  category    String?  @db.VarChar(100)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  
  expense     Expense  @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  participants LineItemParticipant[]

  @@index([expenseId], map: "idx_expense_line_items_expense_id")
  @@map("expense_line_items")
}

model LineItemParticipant {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  lineItemId             String               @map("line_item_id") @db.Uuid
  participantId          String?              @map("participant_id") @db.Uuid
  externalParticipantId  String?              @map("external_participant_id") @db.Uuid
  externalName           String?              @map("external_name") @db.VarChar(255)
  splitPercentage        Decimal              @map("split_percentage") @db.Decimal(5, 2) @default(0)
  amountOwed             Decimal              @map("amount_owed") @db.Decimal(10, 2)
  createdAt              DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  
  lineItem            ExpenseLineItem       @relation(fields: [lineItemId], references: [id], onDelete: Cascade)
  participant         GroupMember?          @relation(fields: [participantId], references: [id])
  externalParticipant ExternalParticipant?  @relation(fields: [externalParticipantId], references: [id], onDelete: SetNull)
  
  @@unique([lineItemId, participantId])
  @@unique([lineItemId, externalName])
  @@index([lineItemId], map: "idx_line_item_participants_line_item_id")
  @@index([participantId], map: "idx_line_item_participants_participant_id")
  @@index([externalParticipantId], map: "idx_line_item_participants_external_participant_id")
  @@map("line_item_participants")
}
